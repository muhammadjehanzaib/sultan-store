// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Category {
  id        String   @id @default(cuid())
  slug      String   @unique
  name_en   String
  name_ar   String
  icon      String?
  createdAt DateTime @default(now())

  products  Product[]
}

model Product {
  id          String   @id @default(cuid())
  name_en     String
  name_ar     String
  description_en String?
  description_ar String?
  image        String
  price        Float
  inStock      Boolean @default(true)
  rating       Float?  @default(0)
  reviews      Int?    @default(0)
  categoryId   String
  createdAt    DateTime @default(now())

  category     Category @relation(fields: [categoryId], references: [id])
  variants     ProductVariant[]
  attributes   ProductAttribute[]
}

model ProductVariant {
  id           String   @id @default(cuid())
  productId    String
  sku          String?
  price        Float?
  image        String?
  inStock      Boolean  @default(true)
  stockQuantity Int     @default(0)
  createdAt    DateTime @default(now())

  product      Product @relation(fields: [productId], references: [id])
}

model ProductAttribute {
  id        String   @id @default(cuid())
  productId String
  name      String
  type      String // 'color' | 'size' | etc.

  values    AttributeValue[]

  product   Product @relation(fields: [productId], references: [id])
}

model AttributeValue {
  id              String   @id @default(cuid())
  attributeId     String
  value           String
  label           String?
  hexColor        String?
  priceModifier   Float?
  inStock         Boolean  @default(true)
  imageUrl        String?

  attribute       ProductAttribute @relation(fields: [attributeId], references: [id])
}